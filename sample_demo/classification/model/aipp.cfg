# AIPP的配置以aipp_op开始，标识这是一个AIPP算子的配置，aipp_op支持配置多个
aipp_op {
#
# AIPP当前支持色域转换、抠图、减均值、乘系数、通道数据交换、单行模式的能力。
# 输入图片的类型仅支持UINT8格式。
# 使用此配置文件时，请将需要配置的参数去注释，并改为合适的值。
# 模板中参数值为默认值，其中input_format属性为必选属性，其余属性均为可选配置。
#========================= 全局设置（start） ======================================================================================================================
# aipp_mode指定了AIPP的模式，必须配置
# 类型：enum
# 取值范围：dynamic/static，dynamic 表示动态AIPP，static 表示静态AIPP
aipp_mode: static

# related_input_rank参数为可选，标识对模型的第几个输入做AIPP处理，从0开始，默认为0。例如模型有两个输入，需要对第2个输入做AIPP，则配置related_input_rank为1。
# 类型: 整型
# 配置范围 >= 0
# related_input_rank: 0
 
# input_edge_idx参数为可选，如果一个模型输入为多个算子共有，即Data算子后面跟着多个算子，配置该参数，对Data算子的不同的输出边做不同的AIPP处理。
# 类型: 整型
# 配置范围 >= 0
# input_edge_idx: 0
#========================= 全局设置（end） ======================================================================================================================

#========================= 动态AIPP需设置，静态AIPP无需设置（start） =============================================================================================
# 输入图像最大的size，必须大于等于原始图像的大小
# 类型：int
# max_src_image_size: 0
 
# 是否支持旋转，保留字段，暂不支持该功能
# 类型：bool
# 取值范围：true/false，true表示支持旋转，false表示不支持旋转
# support_rotation: false
#========================= 动态AIPP需设置，静态AIPP无需设置（end） ==============================================================================================

#========================= 静态AIPP需设置，动态AIPP无需设置 （start）============================================================================================
# 输入图像类型
# 类型: enum
# 取值范围：YUV420SP_U8/XRGB8888_U8/RGB888_U8/YUV400_U8
input_format : RGB888_U8

# 图像的宽度、高度
# 类型：uint13
# 取值范围 & 约束： [0,4096]、对于YUV420SP_U8类型的图像，要求取值是偶数
# 说明：请根据实际图片的宽、高配置src_image_size_w、src_image_size_h，若src_image_size_w、src_image_size_h同时不设置或同时设置为0，则会取网络输入定义的w和h
src_image_size_w :224
src_image_size_h :224

#c_padding_value :0.0
#========= crop参数设置（配置样例请参见AIPP配置 > Crop/Padding配置说明） =========
# AIPP处理图片时是否支持抠图
# 类型：bool
# 取值范围：true/false，true表示支持，false表示不支持
crop :false

# 抠图起始位置水平、垂直方向坐标，抠图大小为网络输入定义的w和h
# 类型：uint13
# 取值范围 & 约束： [0,4096]、对于YUV420SP_U8类型的图像，要求取值是偶数
#说明：load_start_pos_w加上网络输入定义的w需要小于等于src_image_size_w，load_start_pos_h加上网络输入定义的h需要小于等于src_image_size_h
#load_start_pos_w :0
#load_start_pos_h :0

# 抠图后的图像size
# 类型：uint13
# 取值范围 & 约束： [0,4096]、偶数、load_start_pos_w + crop_size_w <= src_image_size_w、load_start_pos_h + crop_size_h <= src_image_size_h
# crop_size_w :0
# crop_size_h :0


#================================== resize参数设置 ================================
# AIPP处理图片时是否支持缩放，保留字段，暂不支持该功能
# 类型：bool
# 取值范围：true/false，true表示支持，false表示不支持
#resize :false
 
# 缩放后图像的宽度和高度，保留字段，暂不支持该功能
# 类型：uint13
# 取值范围 & 约束： [0,4096]、偶数、小于src_image_size
#resize_output_w :0
#resize_output_h :0


#======== padding参数设置（配置样例请参见AIPP配置 > Crop/Padding配置说明） =========
# AIPP处理图片时padding使能开关
# 类型：bool
# 取值范围：true/false，true表示支持，false表示不支持
# padding :false
 
# C方向的填充值，静态AIPP配置
# 类型： float16
# left_padding_size :0
# right_padding_size :0
# top_padding_size :0
# bottom_padding_size :0


#================================ rotation参数设置 ==================================
# AIPP处理图片时的旋转角度，保留字段，暂不支持该功能
# 类型：uint8
# 范围：{0, 1, 2, 3} 0不旋转，1顺时针90°，2顺时针180°，3顺时针270°
# rotation_angle :0


#========= 色域转换参数设置（配置样例请参见AIPP配置 > 色域转换配置说明） =============
# 色域转换开关，静态AIPP配置
# 类型：bool
# 取值范围：true/false，true表示开启色域转换，false表示关闭
csc_switch :false

# 色域转换前，R通道与B通道交换开关/U通道与V通道交换开关
# 类型：bool
# 取值范围：true/false，true表示开启通道交换，false表示关闭
rbuv_swap_switch :true

# 单行处理模式（只处理抠图后的第一行）开关
# 类型：bool
# 取值范围：true/false，true表示开启单行处理模式，false表示关闭
# single_line_mode :false

# 若色域转换开关为false，则本功能旁路。
# 若输入图片通道数为4，则忽略第一通道。
# YUV转BGR：
# | B |   | matrix_r0c0 matrix_r0c1 matrix_r0c2 | | Y - input_bias_0 |
# | G | = | matrix_r1c0 matrix_r1c1 matrix_r1c2 | | U - input_bias_1 | >> 8
# | R |   | matrix_r2c0 matrix_r2c1 matrix_r2c2 | | V - input_bias_2 |
# BGR转YUV：
# | Y |   | matrix_r0c0 matrix_r0c1 matrix_r0c2 | | B |        | output_bias_0 |
# | U | = | matrix_r1c0 matrix_r1c1 matrix_r1c2 | | G | >> 8 + | output_bias_1 |
# | V |   | matrix_r2c0 matrix_r2c1 matrix_r2c2 | | R |        | output_bias_2 |

# 3*3 CSC矩阵元素
# 类型：int16
# 取值范围：[-32768 ,32767] 
# matrix_r0c0 :298
# matrix_r0c1 :516
# matrix_r0c2 :0
# matrix_r1c0 :298
# matrix_r1c1 :-100
# matrix_r1c2 :-208
# matrix_r2c0 :298
# matrix_r2c1 :0
# matrix_r2c2 :409

# RGB转YUV时的输出偏移
# 类型：uint8
# 取值范围：[0, 255]
# output_bias_0 :16
# output_bias_1 :128
# output_bias_2 :128

# YUV转RGB时的输入偏移
# 类型：uint8
# 取值范围：[0, 255]
# input_bias_0 :16
# input_bias_1 :128
# input_bias_2 :128


#============================== 减均值、乘系数设置 =================================
# 计算规则如下：
# 当uint8->uint8时，本功能旁路
# 当uint8->int8时，pixel_out_chx(i) = pixel_in_chx(i) – mean_chn_i
# 当uint8->fp16时，pixel_out_chx(i) = [pixel_in_chx(i) – mean_chn_i – min_chn_i] * var_reci_chn

# 通道n均值
# 类型：uint8
# 取值范围：[0, 255]
mean_chn_0 :123
mean_chn_1 :117
mean_chn_2 :104

# 通道n最小值
# 类型：float16
# 取值范围：[-65504, 65504]
# min_chn_0 :0.0
# min_chn_1 :0.0
# min_chn_2 :0.0

# 通道n方差或(max-min)的倒数
# 类型：float16
# 取值范围：[-65504, 65504]
var_reci_chn_0 :1.0
var_reci_chn_1 :1.0
var_reci_chn_2 :1.0
}
#========================= 静态AIPP需设置，动态AIPP无需设置 （end）============================================================================================
